{"ast":null,"code":"import { drawLighterSquare } from './drawingUtils';\nexport function rotateSquare(ctx, size, angle, x, y) {\n  const frames = 60;\n  let currentFrame = 0;\n  const canvasWidth = ctx.canvas.width;\n  const canvasHeight = ctx.canvas.height;\n  const squareCenterX = x !== undefined ? x + size / 2 : canvasWidth / 2;\n  const squareCenterY = y !== undefined ? y + size / 2 : canvasHeight / 2;\n  function animate() {\n    ctx.clearRect(0, 0, canvasWidth, canvasHeight);\n\n    // Draw the center dot\n    ctx.fillStyle = 'red';\n    ctx.beginPath();\n    ctx.arc(squareCenterX, squareCenterY, 2, 0, Math.PI * 2);\n    ctx.fill();\n\n    // Rotate around the center of the square\n    ctx.save();\n    ctx.translate(squareCenterX, squareCenterY);\n    ctx.rotate(currentFrame / frames * (angle * Math.PI / 180));\n    ctx.translate(-size / 2, -size / 2);\n    drawLighterSquare(ctx, 0, 0, size);\n    ctx.restore();\n    currentFrame++;\n    if (currentFrame < frames) {\n      requestAnimationFrame(animate);\n    }\n  }\n  animate();\n}\nexport function reflectSquare(ctx, x, y, size, direction) {\n  const frames = 30;\n  let currentFrame = 0;\n  function animate() {\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    ctx.save();\n    ctx.translate(x + size / 2, y + size / 2);\n    switch (direction) {\n      case 'horizontal':\n        ctx.scale(1 - currentFrame / frames * 2, 1);\n        break;\n      case 'vertical':\n        ctx.scale(1, 1 - currentFrame / frames * 2);\n        break;\n      case 'diagonal1':\n        ctx.rotate(Math.PI / 4);\n        ctx.scale(1, 1 - currentFrame / frames * 2);\n        ctx.rotate(-Math.PI / 4);\n        break;\n      case 'diagonal2':\n        // Keep this case unchanged as it's working correctly\n        ctx.rotate(-Math.PI / 4);\n        ctx.scale(1 - currentFrame / frames * 2, 1);\n        ctx.rotate(Math.PI / 4);\n        break;\n    }\n    ctx.translate(-(x + size / 2), -(y + size / 2));\n    drawLighterSquare(ctx, x, y, size);\n    ctx.restore();\n    currentFrame++;\n    if (currentFrame <= frames) {\n      requestAnimationFrame(animate);\n    }\n  }\n  animate();\n}","map":{"version":3,"names":["drawLighterSquare","rotateSquare","ctx","size","angle","x","y","frames","currentFrame","canvasWidth","canvas","width","canvasHeight","height","squareCenterX","undefined","squareCenterY","animate","clearRect","fillStyle","beginPath","arc","Math","PI","fill","save","translate","rotate","restore","requestAnimationFrame","reflectSquare","direction","scale"],"sources":["/Users/Rebin/new symmetry /my-app/src/utils/transformUtils.ts"],"sourcesContent":["import { drawLighterSquare } from './drawingUtils';\n\nexport function rotateSquare(\n  ctx: CanvasRenderingContext2D, \n  size: number, \n  angle: number,\n  x?: number,\n  y?: number\n) {\n  const frames = 60;\n  let currentFrame = 0;\n\n  const canvasWidth = ctx.canvas.width;\n  const canvasHeight = ctx.canvas.height;\n  const squareCenterX = x !== undefined ? x + size / 2 : canvasWidth / 2;\n  const squareCenterY = y !== undefined ? y + size / 2 : canvasHeight / 2;\n\n  function animate() {\n    ctx.clearRect(0, 0, canvasWidth, canvasHeight);\n\n    // Draw the center dot\n    ctx.fillStyle = 'red';\n    ctx.beginPath();\n    ctx.arc(squareCenterX, squareCenterY, 2, 0, Math.PI * 2);\n    ctx.fill();\n\n    // Rotate around the center of the square\n    ctx.save();\n    ctx.translate(squareCenterX, squareCenterY);\n    ctx.rotate((currentFrame / frames) * (angle * Math.PI / 180));\n    ctx.translate(-size / 2, -size / 2);\n    drawLighterSquare(ctx, 0, 0, size);\n    ctx.restore();\n\n    currentFrame++;\n\n    if (currentFrame < frames) {\n      requestAnimationFrame(animate);\n    }\n  }\n\n  animate();\n}\n\nexport function reflectSquare(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  size: number,\n  direction: 'horizontal' | 'vertical' | 'diagonal1' | 'diagonal2'\n) {\n  const frames = 30;\n  let currentFrame = 0;\n\n  function animate() {\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n\n    ctx.save();\n    ctx.translate(x + size / 2, y + size / 2);\n    \n    switch (direction) {\n      case 'horizontal':\n        ctx.scale(1 - (currentFrame / frames) * 2, 1);\n        break;\n      case 'vertical':\n        ctx.scale(1, 1 - (currentFrame / frames) * 2);\n        break;\n      case 'diagonal1':\n        ctx.rotate(Math.PI / 4);\n        ctx.scale(1, 1 - (currentFrame / frames) * 2);\n        ctx.rotate(-Math.PI / 4);\n        break;\n      case 'diagonal2':\n        // Keep this case unchanged as it's working correctly\n        ctx.rotate(-Math.PI / 4);\n        ctx.scale(1 - (currentFrame / frames) * 2, 1);\n        ctx.rotate(Math.PI / 4);\n        break;\n    }\n    \n    ctx.translate(-(x + size / 2), -(y + size / 2));\n    drawLighterSquare(ctx, x, y, size);\n    ctx.restore();\n\n    currentFrame++;\n\n    if (currentFrame <= frames) {\n      requestAnimationFrame(animate);\n    }\n  }\n\n  animate();\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}