{"ast":null,"code":"export function drawSquare(ctx, x, y, size) {\n  ctx.fillStyle = '#3498db';\n  ctx.fillRect(x - size / 2, y - size / 2, size, size);\n}\nexport function drawLighterSquare(ctx, x, y, size) {\n  ctx.fillStyle = 'rgba(52, 152, 219, 0.5)';\n  ctx.fillRect(x - size / 2, y - size / 2, size, size);\n}\nexport function drawSymmetryLine(ctx, startX, startY, endX, endY) {\n  ctx.beginPath();\n  ctx.moveTo(startX, startY);\n  ctx.lineTo(endX, endY);\n  ctx.setLineDash([5, 5]);\n  ctx.strokeStyle = '#e74c3c';\n  ctx.lineWidth = 2;\n  ctx.stroke();\n  ctx.setLineDash([]);\n}\nexport function drawOverlappingSquares(ctx, size) {\n  const halfSize = size / 2;\n  const quarterSize = size / 4;\n\n  // Create a single color for the entire shape\n  const color = 'rgba(52, 152, 219, 0.7)'; // Light blue, fully opaque\n\n  ctx.beginPath();\n\n  // Start from the top point of the star\n  ctx.moveTo(0, -halfSize);\n\n  // Draw the right side of the first square\n  ctx.lineTo(halfSize, -quarterSize);\n  ctx.lineTo(halfSize, quarterSize);\n\n  // Draw the bottom right point of the star\n  ctx.lineTo(quarterSize, halfSize);\n\n  // Draw the bottom side of the second square\n  ctx.lineTo(-quarterSize, halfSize);\n\n  // Draw the bottom left point of the star\n  ctx.lineTo(-halfSize, quarterSize);\n\n  // Draw the left side of the first square\n  ctx.lineTo(-halfSize, -quarterSize);\n\n  // Draw the top left point of the star\n  ctx.lineTo(-quarterSize, -halfSize);\n\n  // Close the path\n  ctx.closePath();\n\n  // Fill the entire shape with a single color\n  ctx.fillStyle = color;\n  ctx.fill();\n}\nexport function drawDiagonals(ctx, size) {\n  ctx.beginPath();\n  ctx.moveTo(-size / 2, -size / 2);\n  ctx.lineTo(size / 2, size / 2);\n  ctx.moveTo(size / 2, -size / 2);\n  ctx.lineTo(-size / 2, size / 2);\n  ctx.strokeStyle = 'rgba(255, 0, 0, 0.5)';\n  ctx.stroke();\n}","map":{"version":3,"names":["drawSquare","ctx","x","y","size","fillStyle","fillRect","drawLighterSquare","drawSymmetryLine","startX","startY","endX","endY","beginPath","moveTo","lineTo","setLineDash","strokeStyle","lineWidth","stroke","drawOverlappingSquares","halfSize","quarterSize","color","closePath","fill","drawDiagonals"],"sources":["/Users/Rebin/new symmetry /my-app/src/utils/drawingUtils.ts"],"sourcesContent":["export function drawSquare(ctx: CanvasRenderingContext2D, x: number, y: number, size: number) {\n    ctx.fillStyle = '#3498db';\n    ctx.fillRect(x - size / 2, y - size / 2, size, size);\n  }\n  \n  export function drawLighterSquare(ctx: CanvasRenderingContext2D, x: number, y: number, size: number) {\n    ctx.fillStyle = 'rgba(52, 152, 219, 0.5)';\n    ctx.fillRect(x - size / 2, y - size / 2, size, size);\n  }\n  \n  export function drawSymmetryLine(ctx: CanvasRenderingContext2D, startX: number, startY: number, endX: number, endY: number) {\n    ctx.beginPath();\n    ctx.moveTo(startX, startY);\n    ctx.lineTo(endX, endY);\n    ctx.setLineDash([5, 5]);\n    ctx.strokeStyle = '#e74c3c';\n    ctx.lineWidth = 2;\n    ctx.stroke();\n    ctx.setLineDash([]);\n  }\n\n  export function drawOverlappingSquares(ctx: CanvasRenderingContext2D, size: number) {\n    const halfSize = size / 2;\n    const quarterSize = size / 4;\n\n    // Create a single color for the entire shape\n    const color = 'rgba(52, 152, 219, 0.7)';  // Light blue, fully opaque\n\n    ctx.beginPath();\n\n    // Start from the top point of the star\n    ctx.moveTo(0, -halfSize);\n    \n    // Draw the right side of the first square\n    ctx.lineTo(halfSize, -quarterSize);\n    ctx.lineTo(halfSize, quarterSize);\n    \n    // Draw the bottom right point of the star\n    ctx.lineTo(quarterSize, halfSize);\n    \n    // Draw the bottom side of the second square\n    ctx.lineTo(-quarterSize, halfSize);\n    \n    // Draw the bottom left point of the star\n    ctx.lineTo(-halfSize, quarterSize);\n    \n    // Draw the left side of the first square\n    ctx.lineTo(-halfSize, -quarterSize);\n    \n    // Draw the top left point of the star\n    ctx.lineTo(-quarterSize, -halfSize);\n    \n    // Close the path\n    ctx.closePath();\n\n    // Fill the entire shape with a single color\n    ctx.fillStyle = color;\n    ctx.fill();\n  }\n\n  export function drawDiagonals(ctx: CanvasRenderingContext2D, size: number) {\n    ctx.beginPath();\n    ctx.moveTo(-size / 2, -size / 2);\n    ctx.lineTo(size / 2, size / 2);\n    ctx.moveTo(size / 2, -size / 2);\n    ctx.lineTo(-size / 2, size / 2);\n    ctx.strokeStyle = 'rgba(255, 0, 0, 0.5)';\n    ctx.stroke();\n  }"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}