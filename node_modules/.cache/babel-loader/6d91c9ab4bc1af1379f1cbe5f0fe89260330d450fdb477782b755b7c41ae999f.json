{"ast":null,"code":"import { drawLighterSquare } from './drawingUtils';\nexport function rotateSquare(ctx, size, angle) {\n  const frames = 60;\n  let currentFrame = 0;\n  const canvasWidth = ctx.canvas.width;\n  const canvasHeight = ctx.canvas.height;\n  const squareX = (canvasWidth - size) / 2;\n  const squareY = (canvasHeight - size) / 2;\n  const squareCenterX = squareX + size / 2;\n  const squareCenterY = squareY + size / 2;\n  function animate() {\n    ctx.clearRect(0, 0, canvasWidth, canvasHeight);\n\n    // Draw the diagonals\n    ctx.beginPath();\n    ctx.moveTo(squareX, squareY);\n    ctx.lineTo(squareX + size, squareY + size);\n    ctx.moveTo(squareX + size, squareY);\n    ctx.lineTo(squareX, squareY + size);\n    ctx.strokeStyle = 'rgba(255, 0, 0, 0.5)';\n    ctx.stroke();\n\n    // Draw the center dot\n    ctx.fillStyle = 'red';\n    ctx.beginPath();\n    ctx.arc(squareCenterX, squareCenterY, 2, 0, Math.PI * 2);\n    ctx.fill();\n\n    // Rotate and draw the square\n    ctx.save();\n    ctx.translate(squareCenterX, squareCenterY);\n    ctx.rotate(currentFrame / frames * (angle * Math.PI / 180));\n    ctx.translate(-size / 2, -size / 2);\n    drawLighterSquare(ctx, 0, 0, size);\n    ctx.restore();\n    currentFrame++;\n    if (currentFrame < frames) {\n      requestAnimationFrame(animate);\n    }\n  }\n  animate();\n}\nexport function reflectSquare(ctx, x, y, size, direction) {\n  const frames = 30;\n  let currentFrame = 0;\n  function animate() {\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    ctx.save();\n    ctx.translate(x + size / 2, y + size / 2);\n    switch (direction) {\n      case 'horizontal':\n        ctx.scale(1 - currentFrame / frames * 2, 1);\n        break;\n      case 'vertical':\n        ctx.scale(1, 1 - currentFrame / frames * 2);\n        break;\n      case 'diagonal1':\n        ctx.rotate(Math.PI / 4);\n        ctx.scale(1, 1 - currentFrame / frames * 2);\n        ctx.rotate(-Math.PI / 4);\n        break;\n      case 'diagonal2':\n        // Keep this case unchanged as it's working correctly\n        ctx.rotate(-Math.PI / 4);\n        ctx.scale(1 - currentFrame / frames * 2, 1);\n        ctx.rotate(Math.PI / 4);\n        break;\n    }\n    ctx.translate(-(x + size / 2), -(y + size / 2));\n    drawLighterSquare(ctx, x, y, size);\n    ctx.restore();\n    currentFrame++;\n    if (currentFrame <= frames) {\n      requestAnimationFrame(animate);\n    }\n  }\n  animate();\n}","map":{"version":3,"names":["drawLighterSquare","rotateSquare","ctx","size","angle","frames","currentFrame","canvasWidth","canvas","width","canvasHeight","height","squareX","squareY","squareCenterX","squareCenterY","animate","clearRect","beginPath","moveTo","lineTo","strokeStyle","stroke","fillStyle","arc","Math","PI","fill","save","translate","rotate","restore","requestAnimationFrame","reflectSquare","x","y","direction","scale"],"sources":["/Users/Rebin/new symmetry /my-app/src/utils/transformUtils.ts"],"sourcesContent":["import { drawLighterSquare } from './drawingUtils';\n\nexport function rotateSquare(\n  ctx: CanvasRenderingContext2D, \n  size: number, \n  angle: number\n) {\n  const frames = 60;\n  let currentFrame = 0;\n\n  const canvasWidth = ctx.canvas.width;\n  const canvasHeight = ctx.canvas.height;\n  const squareX = (canvasWidth - size) / 2;\n  const squareY = (canvasHeight - size) / 2;\n  const squareCenterX = squareX + size / 2;\n  const squareCenterY = squareY + size / 2;\n\n  function animate() {\n    ctx.clearRect(0, 0, canvasWidth, canvasHeight);\n\n    // Draw the diagonals\n    ctx.beginPath();\n    ctx.moveTo(squareX, squareY);\n    ctx.lineTo(squareX + size, squareY + size);\n    ctx.moveTo(squareX + size, squareY);\n    ctx.lineTo(squareX, squareY + size);\n    ctx.strokeStyle = 'rgba(255, 0, 0, 0.5)';\n    ctx.stroke();\n\n    // Draw the center dot\n    ctx.fillStyle = 'red';\n    ctx.beginPath();\n    ctx.arc(squareCenterX, squareCenterY, 2, 0, Math.PI * 2);\n    ctx.fill();\n\n    // Rotate and draw the square\n    ctx.save();\n    ctx.translate(squareCenterX, squareCenterY);\n    ctx.rotate((currentFrame / frames) * (angle * Math.PI / 180));\n    ctx.translate(-size / 2, -size / 2);\n    drawLighterSquare(ctx, 0, 0, size);\n    ctx.restore();\n\n    currentFrame++;\n\n    if (currentFrame < frames) {\n      requestAnimationFrame(animate);\n    }\n  }\n\n  animate();\n}\n\nexport function reflectSquare(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  size: number,\n  direction: 'horizontal' | 'vertical' | 'diagonal1' | 'diagonal2'\n) {\n  const frames = 30;\n  let currentFrame = 0;\n\n  function animate() {\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n\n    ctx.save();\n    ctx.translate(x + size / 2, y + size / 2);\n    \n    switch (direction) {\n      case 'horizontal':\n        ctx.scale(1 - (currentFrame / frames) * 2, 1);\n        break;\n      case 'vertical':\n        ctx.scale(1, 1 - (currentFrame / frames) * 2);\n        break;\n      case 'diagonal1':\n        ctx.rotate(Math.PI / 4);\n        ctx.scale(1, 1 - (currentFrame / frames) * 2);\n        ctx.rotate(-Math.PI / 4);\n        break;\n      case 'diagonal2':\n        // Keep this case unchanged as it's working correctly\n        ctx.rotate(-Math.PI / 4);\n        ctx.scale(1 - (currentFrame / frames) * 2, 1);\n        ctx.rotate(Math.PI / 4);\n        break;\n    }\n    \n    ctx.translate(-(x + size / 2), -(y + size / 2));\n    drawLighterSquare(ctx, x, y, size);\n    ctx.restore();\n\n    currentFrame++;\n\n    if (currentFrame <= frames) {\n      requestAnimationFrame(animate);\n    }\n  }\n\n  animate();\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}