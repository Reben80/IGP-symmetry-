{"ast":null,"code":"import { drawLighterSquare } from './drawingUtils';\nexport function transformCross(ctx, size, angle, reflectVertical = false, reflectHorizontal = false) {\n  const frames = 60;\n  let currentFrame = 0;\n  const canvasWidth = ctx.canvas.width;\n  const canvasHeight = ctx.canvas.height;\n  const centerX = 200;\n  const centerY = 200;\n  function animate() {\n    ctx.clearRect(0, 0, canvasWidth, canvasHeight);\n\n    // Draw the stationary square\n    const squareX = centerX - size / 2;\n    const squareY = centerY - size / 2;\n    drawLighterSquare(ctx, squareX, squareY, size);\n    ctx.save();\n    ctx.translate(centerX, centerY);\n    ctx.rotate(currentFrame / frames * (angle * Math.PI / 180));\n\n    // Draw the rotating diagonals\n    ctx.beginPath();\n    ctx.moveTo(-size / 2, -size / 2);\n    ctx.lineTo(size / 2, size / 2);\n    ctx.moveTo(size / 2, -size / 2);\n    ctx.lineTo(-size / 2, size / 2);\n    ctx.strokeStyle = 'rgba(255, 0, 0, 0.5)';\n    ctx.stroke();\n    ctx.restore();\n\n    // Draw vertical reflection line\n    if (reflectVertical) {\n      ctx.beginPath();\n      ctx.moveTo(centerX, 0);\n      ctx.lineTo(centerX, canvasHeight);\n      ctx.strokeStyle = 'rgba(0, 0, 255, 0.5)';\n      ctx.stroke();\n    }\n\n    // Draw horizontal reflection line\n    if (reflectHorizontal) {\n      ctx.beginPath();\n      ctx.moveTo(0, centerY);\n      ctx.lineTo(canvasWidth, centerY);\n      ctx.strokeStyle = 'rgba(0, 255, 0, 0.5)';\n      ctx.stroke();\n    }\n\n    // Draw the center dot\n    ctx.fillStyle = 'red';\n    ctx.beginPath();\n    ctx.arc(centerX, centerY, 2, 0, Math.PI * 2);\n    ctx.fill();\n\n    // Display coordinates\n    ctx.fillStyle = 'black';\n    ctx.font = '12px Arial';\n    ctx.fillText(`(${centerX}, ${centerY})`, centerX + 5, centerY - 5);\n    currentFrame++;\n    if (currentFrame < frames) {\n      requestAnimationFrame(animate);\n    }\n  }\n  animate();\n}\nexport function reflectSquare(ctx, x, y, size, direction) {\n  const frames = 30;\n  let currentFrame = 0;\n  function animate() {\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    ctx.save();\n    ctx.translate(x + size / 2, y + size / 2);\n    switch (direction) {\n      case 'horizontal':\n        ctx.scale(1 - currentFrame / frames * 2, 1);\n        break;\n      case 'vertical':\n        ctx.scale(1, 1 - currentFrame / frames * 2);\n        break;\n      case 'diagonal1':\n        ctx.rotate(Math.PI / 4);\n        ctx.scale(1, 1 - currentFrame / frames * 2);\n        ctx.rotate(-Math.PI / 4);\n        break;\n      case 'diagonal2':\n        // Keep this case unchanged as it's working correctly\n        ctx.rotate(-Math.PI / 4);\n        ctx.scale(1 - currentFrame / frames * 2, 1);\n        ctx.rotate(Math.PI / 4);\n        break;\n    }\n    ctx.translate(-(x + size / 2), -(y + size / 2));\n    drawLighterSquare(ctx, x, y, size);\n    ctx.restore();\n    currentFrame++;\n    if (currentFrame <= frames) {\n      requestAnimationFrame(animate);\n    }\n  }\n  animate();\n}","map":{"version":3,"names":["drawLighterSquare","transformCross","ctx","size","angle","reflectVertical","reflectHorizontal","frames","currentFrame","canvasWidth","canvas","width","canvasHeight","height","centerX","centerY","animate","clearRect","squareX","squareY","save","translate","rotate","Math","PI","beginPath","moveTo","lineTo","strokeStyle","stroke","restore","fillStyle","arc","fill","font","fillText","requestAnimationFrame","reflectSquare","x","y","direction","scale"],"sources":["/Users/Rebin/new symmetry /my-app/src/utils/transformUtils.ts"],"sourcesContent":["import { drawLighterSquare } from './drawingUtils';\n\nexport function transformCross(\n  ctx: CanvasRenderingContext2D, \n  size: number, \n  angle: number,\n  reflectVertical: boolean = false,\n  reflectHorizontal: boolean = false\n) {\n  const frames = 60;\n  let currentFrame = 0;\n\n  const canvasWidth = ctx.canvas.width;\n  const canvasHeight = ctx.canvas.height;\n  const centerX = 200;\n  const centerY = 200;\n\n  function animate() {\n    ctx.clearRect(0, 0, canvasWidth, canvasHeight);\n\n    // Draw the stationary square\n    const squareX = centerX - size / 2;\n    const squareY = centerY - size / 2;\n    drawLighterSquare(ctx, squareX, squareY, size);\n\n    ctx.save();\n    ctx.translate(centerX, centerY);\n    ctx.rotate((currentFrame / frames) * (angle * Math.PI / 180));\n    \n    // Draw the rotating diagonals\n    ctx.beginPath();\n    ctx.moveTo(-size / 2, -size / 2);\n    ctx.lineTo(size / 2, size / 2);\n    ctx.moveTo(size / 2, -size / 2);\n    ctx.lineTo(-size / 2, size / 2);\n    ctx.strokeStyle = 'rgba(255, 0, 0, 0.5)';\n    ctx.stroke();\n\n    ctx.restore();\n\n    // Draw vertical reflection line\n    if (reflectVertical) {\n      ctx.beginPath();\n      ctx.moveTo(centerX, 0);\n      ctx.lineTo(centerX, canvasHeight);\n      ctx.strokeStyle = 'rgba(0, 0, 255, 0.5)';\n      ctx.stroke();\n    }\n\n    // Draw horizontal reflection line\n    if (reflectHorizontal) {\n      ctx.beginPath();\n      ctx.moveTo(0, centerY);\n      ctx.lineTo(canvasWidth, centerY);\n      ctx.strokeStyle = 'rgba(0, 255, 0, 0.5)';\n      ctx.stroke();\n    }\n\n    // Draw the center dot\n    ctx.fillStyle = 'red';\n    ctx.beginPath();\n    ctx.arc(centerX, centerY, 2, 0, Math.PI * 2);\n    ctx.fill();\n\n    // Display coordinates\n    ctx.fillStyle = 'black';\n    ctx.font = '12px Arial';\n    ctx.fillText(`(${centerX}, ${centerY})`, centerX + 5, centerY - 5);\n\n    currentFrame++;\n\n    if (currentFrame < frames) {\n      requestAnimationFrame(animate);\n    }\n  }\n\n  animate();\n}\n\nexport function reflectSquare(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  size: number,\n  direction: 'horizontal' | 'vertical' | 'diagonal1' | 'diagonal2'\n) {\n  const frames = 30;\n  let currentFrame = 0;\n\n  function animate() {\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n\n    ctx.save();\n    ctx.translate(x + size / 2, y + size / 2);\n    \n    switch (direction) {\n      case 'horizontal':\n        ctx.scale(1 - (currentFrame / frames) * 2, 1);\n        break;\n      case 'vertical':\n        ctx.scale(1, 1 - (currentFrame / frames) * 2);\n        break;\n      case 'diagonal1':\n        ctx.rotate(Math.PI / 4);\n        ctx.scale(1, 1 - (currentFrame / frames) * 2);\n        ctx.rotate(-Math.PI / 4);\n        break;\n      case 'diagonal2':\n        // Keep this case unchanged as it's working correctly\n        ctx.rotate(-Math.PI / 4);\n        ctx.scale(1 - (currentFrame / frames) * 2, 1);\n        ctx.rotate(Math.PI / 4);\n        break;\n    }\n    \n    ctx.translate(-(x + size / 2), -(y + size / 2));\n    drawLighterSquare(ctx, x, y, size);\n    ctx.restore();\n\n    currentFrame++;\n\n    if (currentFrame <= frames) {\n      requestAnimationFrame(animate);\n    }\n  }\n\n  animate();\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}