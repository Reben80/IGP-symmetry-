{"ast":null,"code":"import { drawLighterSquare } from './drawingUtils';\nexport function rotateSquare(ctx, size, angle, x, y) {\n  const frames = 60;\n  let currentFrame = 0;\n  const canvasWidth = ctx.canvas.width;\n  const canvasHeight = ctx.canvas.height;\n  const squareX = x !== undefined ? x : (canvasWidth - size) / 2;\n  const squareY = y !== undefined ? y : (canvasHeight - size) / 2;\n  const squareCenterX = squareX + size / 2;\n  const squareCenterY = squareY + size / 2;\n  function animate() {\n    ctx.clearRect(0, 0, canvasWidth, canvasHeight);\n\n    // Draw the diagonals\n    ctx.beginPath();\n    ctx.moveTo(squareX, squareY);\n    ctx.lineTo(squareX + size, squareY + size);\n    ctx.moveTo(squareX + size, squareY);\n    ctx.lineTo(squareX, squareY + size);\n    ctx.strokeStyle = 'rgba(255, 0, 0, 0.5)';\n    ctx.stroke();\n\n    // Draw the center dot\n    ctx.fillStyle = 'red';\n    ctx.beginPath();\n    ctx.arc(squareCenterX, squareCenterY, 2, 0, Math.PI * 2);\n    ctx.fill();\n\n    // Rotate and draw the square\n    ctx.save();\n    ctx.translate(squareCenterX, squareCenterY);\n    ctx.rotate(currentFrame / frames * (angle * Math.PI / 180));\n    ctx.translate(-size / 2, -size / 2);\n    drawLighterSquare(ctx, 0, 0, size);\n    ctx.restore();\n    currentFrame++;\n    if (currentFrame < frames) {\n      requestAnimationFrame(animate);\n    }\n  }\n  animate();\n}\nexport function reflectSquare(ctx, x, y, size, direction) {\n  const frames = 30;\n  let currentFrame = 0;\n  function animate() {\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    ctx.save();\n    ctx.translate(x + size / 2, y + size / 2);\n    switch (direction) {\n      case 'horizontal':\n        ctx.scale(1 - currentFrame / frames * 2, 1);\n        break;\n      case 'vertical':\n        ctx.scale(1, 1 - currentFrame / frames * 2);\n        break;\n      case 'diagonal1':\n        ctx.rotate(Math.PI / 4);\n        ctx.scale(1, 1 - currentFrame / frames * 2);\n        ctx.rotate(-Math.PI / 4);\n        break;\n      case 'diagonal2':\n        // Keep this case unchanged as it's working correctly\n        ctx.rotate(-Math.PI / 4);\n        ctx.scale(1 - currentFrame / frames * 2, 1);\n        ctx.rotate(Math.PI / 4);\n        break;\n    }\n    ctx.translate(-(x + size / 2), -(y + size / 2));\n    drawLighterSquare(ctx, x, y, size);\n    ctx.restore();\n    currentFrame++;\n    if (currentFrame <= frames) {\n      requestAnimationFrame(animate);\n    }\n  }\n  animate();\n}","map":{"version":3,"names":["drawLighterSquare","rotateSquare","ctx","size","angle","x","y","frames","currentFrame","canvasWidth","canvas","width","canvasHeight","height","squareX","undefined","squareY","squareCenterX","squareCenterY","animate","clearRect","beginPath","moveTo","lineTo","strokeStyle","stroke","fillStyle","arc","Math","PI","fill","save","translate","rotate","restore","requestAnimationFrame","reflectSquare","direction","scale"],"sources":["/Users/Rebin/new symmetry /my-app/src/utils/transformUtils.ts"],"sourcesContent":["import { drawLighterSquare } from './drawingUtils';\n\nexport function rotateSquare(\n  ctx: CanvasRenderingContext2D, \n  size: number, \n  angle: number,\n  x?: number,\n  y?: number\n) {\n  const frames = 60;\n  let currentFrame = 0;\n\n  const canvasWidth = ctx.canvas.width;\n  const canvasHeight = ctx.canvas.height;\n  const squareX = x !== undefined ? x : (canvasWidth - size) / 2;\n  const squareY = y !== undefined ? y : (canvasHeight - size) / 2;\n  const squareCenterX = squareX + size / 2;\n  const squareCenterY = squareY + size / 2;\n\n  function animate() {\n    ctx.clearRect(0, 0, canvasWidth, canvasHeight);\n\n    // Draw the diagonals\n    ctx.beginPath();\n    ctx.moveTo(squareX, squareY);\n    ctx.lineTo(squareX + size, squareY + size);\n    ctx.moveTo(squareX + size, squareY);\n    ctx.lineTo(squareX, squareY + size);\n    ctx.strokeStyle = 'rgba(255, 0, 0, 0.5)';\n    ctx.stroke();\n\n    // Draw the center dot\n    ctx.fillStyle = 'red';\n    ctx.beginPath();\n    ctx.arc(squareCenterX, squareCenterY, 2, 0, Math.PI * 2);\n    ctx.fill();\n\n    // Rotate and draw the square\n    ctx.save();\n    ctx.translate(squareCenterX, squareCenterY);\n    ctx.rotate((currentFrame / frames) * (angle * Math.PI / 180));\n    ctx.translate(-size / 2, -size / 2);\n    drawLighterSquare(ctx, 0, 0, size);\n    ctx.restore();\n\n    currentFrame++;\n\n    if (currentFrame < frames) {\n      requestAnimationFrame(animate);\n    }\n  }\n\n  animate();\n}\n\nexport function reflectSquare(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  size: number,\n  direction: 'horizontal' | 'vertical' | 'diagonal1' | 'diagonal2'\n) {\n  const frames = 30;\n  let currentFrame = 0;\n\n  function animate() {\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n\n    ctx.save();\n    ctx.translate(x + size / 2, y + size / 2);\n    \n    switch (direction) {\n      case 'horizontal':\n        ctx.scale(1 - (currentFrame / frames) * 2, 1);\n        break;\n      case 'vertical':\n        ctx.scale(1, 1 - (currentFrame / frames) * 2);\n        break;\n      case 'diagonal1':\n        ctx.rotate(Math.PI / 4);\n        ctx.scale(1, 1 - (currentFrame / frames) * 2);\n        ctx.rotate(-Math.PI / 4);\n        break;\n      case 'diagonal2':\n        // Keep this case unchanged as it's working correctly\n        ctx.rotate(-Math.PI / 4);\n        ctx.scale(1 - (currentFrame / frames) * 2, 1);\n        ctx.rotate(Math.PI / 4);\n        break;\n    }\n    \n    ctx.translate(-(x + size / 2), -(y + size / 2));\n    drawLighterSquare(ctx, x, y, size);\n    ctx.restore();\n\n    currentFrame++;\n\n    if (currentFrame <= frames) {\n      requestAnimationFrame(animate);\n    }\n  }\n\n  animate();\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}