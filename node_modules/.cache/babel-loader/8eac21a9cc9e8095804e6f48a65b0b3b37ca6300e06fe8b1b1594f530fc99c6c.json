{"ast":null,"code":"var _jsxFileName = \"/Users/Rebin/new symmetry /my-app/src/components/SquareSymmetry.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { transformCross } from '../utils/transformUtils';\nimport SymmetryButton from './SymmetryButton';\nimport '../styles/SquareSymmetry.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CANVAS_SIZE = 400; // Increase this value to make the canvas bigger\nconst SQUARE_SIZE = 100; // You can adjust this as needed\n\nconst SquareSymmetry = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const [angle, setAngle] = useState(0);\n  const [size, setSize] = useState(100);\n  const [reflectVertical, setReflectVertical] = useState(false);\n  const [reflectHorizontal, setReflectHorizontal] = useState(false);\n  const [reflectDiagonal1, setReflectDiagonal1] = useState(false);\n  const [reflectDiagonal2, setReflectDiagonal2] = useState(false);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (canvas) {\n      const ctx = canvas.getContext('2d');\n      if (ctx) {\n        transformCross(ctx, size, angle, reflectVertical, reflectHorizontal, reflectDiagonal1, reflectDiagonal2);\n      }\n    }\n  }, [angle, size, reflectVertical, reflectHorizontal, reflectDiagonal1, reflectDiagonal2]);\n  const handleReset = () => {\n    setAngle(0);\n    setSize(100);\n    setReflectVertical(false);\n    setReflectHorizontal(false);\n    setReflectDiagonal1(false);\n    setReflectDiagonal2(false);\n  };\n  const handleSymmetryOperation = operation => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n    ctx.clearRect(0, 0, CANVAS_SIZE, CANVAS_SIZE);\n    switch (operation) {\n      case 'rotate90':\n      case 'rotate180':\n      case 'rotate270':\n        transformCross(ctx, SQUARE_SIZE, parseInt(operation.slice(6)));\n        break;\n      case 'reflectVertical':\n        transformCross(ctx, SQUARE_SIZE, 0, true, false, false, false);\n        break;\n      case 'reflectHorizontal':\n        transformCross(ctx, SQUARE_SIZE, 0, false, true, false, false);\n        break;\n      case 'reflectDiagonal1':\n        transformCross(ctx, SQUARE_SIZE, 0, false, false, true, false);\n        break;\n      case 'reflectDiagonal2':\n        transformCross(ctx, SQUARE_SIZE, 0, false, false, false, true);\n        break;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"square-symmetry\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \" Symmetry Visualizern\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: CANVAS_SIZE,\n      height: CANVAS_SIZE\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [/*#__PURE__*/_jsxDEV(SymmetryButton, {\n        onClick: () => handleSymmetryOperation('rotate90'),\n        label: \"Rotate 90\\xB0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SymmetryButton, {\n        onClick: () => handleSymmetryOperation('rotate180'),\n        label: \"Rotate 180\\xB0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SymmetryButton, {\n        onClick: () => handleSymmetryOperation('rotate270'),\n        label: \"Rotate 270\\xB0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SymmetryButton, {\n        onClick: () => handleSymmetryOperation('reflectVertical'),\n        label: \"Vertical Reflection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SymmetryButton, {\n        onClick: () => handleSymmetryOperation('reflectHorizontal'),\n        label: \"Horizontal Reflection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SymmetryButton, {\n        onClick: () => handleSymmetryOperation('reflectDiagonal1'),\n        label: \"Diagonal Reflection 1 (45\\xB0)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SymmetryButton, {\n        onClick: () => handleSymmetryOperation('reflectDiagonal2'),\n        label: \"Diagonal Reflection 2 (-45\\xB0)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleReset,\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(SquareSymmetry, \"1tgU3iqRxpiuYdfS9Jzw6xmlOtc=\");\n_c = SquareSymmetry;\nexport default SquareSymmetry;\nvar _c;\n$RefreshReg$(_c, \"SquareSymmetry\");","map":{"version":3,"names":["React","useRef","useEffect","useState","transformCross","SymmetryButton","jsxDEV","_jsxDEV","CANVAS_SIZE","SQUARE_SIZE","SquareSymmetry","_s","canvasRef","angle","setAngle","size","setSize","reflectVertical","setReflectVertical","reflectHorizontal","setReflectHorizontal","reflectDiagonal1","setReflectDiagonal1","reflectDiagonal2","setReflectDiagonal2","canvas","current","ctx","getContext","handleReset","handleSymmetryOperation","operation","clearRect","parseInt","slice","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","width","height","onClick","label","_c","$RefreshReg$"],"sources":["/Users/Rebin/new symmetry /my-app/src/components/SquareSymmetry.tsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport { transformCross } from '../utils/transformUtils';\nimport SymmetryButton from './SymmetryButton';\nimport '../styles/SquareSymmetry.css';\n\nconst CANVAS_SIZE = 400; // Increase this value to make the canvas bigger\nconst SQUARE_SIZE = 100; // You can adjust this as needed\n\ntype SymmetryOperation = 'rotate90' | 'rotate180' | 'rotate270' | 'reflectVertical' | 'reflectHorizontal' | 'reflectDiagonal1' | 'reflectDiagonal2';\n\nconst SquareSymmetry: React.FC = () => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const [angle, setAngle] = useState(0);\n  const [size, setSize] = useState(100);\n  const [reflectVertical, setReflectVertical] = useState(false);\n  const [reflectHorizontal, setReflectHorizontal] = useState(false);\n  const [reflectDiagonal1, setReflectDiagonal1] = useState(false);\n  const [reflectDiagonal2, setReflectDiagonal2] = useState(false);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (canvas) {\n      const ctx = canvas.getContext('2d');\n      if (ctx) {\n        transformCross(ctx, size, angle, reflectVertical, reflectHorizontal, reflectDiagonal1, reflectDiagonal2);\n      }\n    }\n  }, [angle, size, reflectVertical, reflectHorizontal, reflectDiagonal1, reflectDiagonal2]);\n\n  const handleReset = () => {\n    setAngle(0);\n    setSize(100);\n    setReflectVertical(false);\n    setReflectHorizontal(false);\n    setReflectDiagonal1(false);\n    setReflectDiagonal2(false);\n  };\n\n  const handleSymmetryOperation = (operation: SymmetryOperation) => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    ctx.clearRect(0, 0, CANVAS_SIZE, CANVAS_SIZE);\n\n    switch (operation) {\n      case 'rotate90':\n      case 'rotate180':\n      case 'rotate270':\n        transformCross(ctx, SQUARE_SIZE, parseInt(operation.slice(6)));\n        break;\n      case 'reflectVertical':\n        transformCross(ctx, SQUARE_SIZE, 0, true, false, false, false);\n        break;\n      case 'reflectHorizontal':\n        transformCross(ctx, SQUARE_SIZE, 0, false, true, false, false);\n        break;\n      case 'reflectDiagonal1':\n        transformCross(ctx, SQUARE_SIZE, 0, false, false, true, false);\n        break;\n      case 'reflectDiagonal2':\n        transformCross(ctx, SQUARE_SIZE, 0, false, false, false, true);\n        break;\n    }\n  };\n\n  return (\n    <div className=\"square-symmetry\">\n      <h1 className=\"title\"> Symmetry Visualizern</h1>\n      <canvas ref={canvasRef} width={CANVAS_SIZE} height={CANVAS_SIZE} />\n      <div className=\"button-container\">\n        <SymmetryButton onClick={() => handleSymmetryOperation('rotate90')} label=\"Rotate 90°\" />\n        <SymmetryButton onClick={() => handleSymmetryOperation('rotate180')} label=\"Rotate 180°\" />\n        <SymmetryButton onClick={() => handleSymmetryOperation('rotate270')} label=\"Rotate 270°\" />\n        <SymmetryButton onClick={() => handleSymmetryOperation('reflectVertical')} label=\"Vertical Reflection\" />\n        <SymmetryButton onClick={() => handleSymmetryOperation('reflectHorizontal')} label=\"Horizontal Reflection\" />\n        <SymmetryButton onClick={() => handleSymmetryOperation('reflectDiagonal1')} label=\"Diagonal Reflection 1 (45°)\" />\n        <SymmetryButton onClick={() => handleSymmetryOperation('reflectDiagonal2')} label=\"Diagonal Reflection 2 (-45°)\" />\n      </div>\n      <button onClick={handleReset}>Reset</button>\n    </div>\n  );\n};\n\nexport default SquareSymmetry;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}