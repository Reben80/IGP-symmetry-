{"ast":null,"code":"import { drawLighterSquare } from './drawingUtils';\nexport function rotateDiagonals(ctx, size, angle) {\n  const frames = 60;\n  let currentFrame = 0;\n  const canvasWidth = ctx.canvas.width;\n  const canvasHeight = ctx.canvas.height;\n  const squareX = (canvasWidth - size) / 2;\n  const squareY = (canvasHeight - size) / 2;\n  const centerX = squareX + size / 2;\n  const centerY = squareY + size / 2;\n  function animate() {\n    ctx.clearRect(0, 0, canvasWidth, canvasHeight);\n\n    // Draw the stationary square\n    drawLighterSquare(ctx, squareX, squareY, size);\n\n    // Draw the rotating diagonals\n    ctx.save();\n    ctx.translate(centerX, centerY);\n    ctx.rotate(currentFrame / frames * (angle * Math.PI / 180));\n    ctx.beginPath();\n    ctx.moveTo(-size / 2, -size / 2);\n    ctx.lineTo(size / 2, size / 2);\n    ctx.moveTo(size / 2, -size / 2);\n    ctx.lineTo(-size / 2, size / 2);\n    ctx.strokeStyle = 'rgba(255, 0, 0, 0.5)';\n    ctx.stroke();\n    ctx.restore();\n\n    // Draw the center dot\n    ctx.fillStyle = 'red';\n    ctx.beginPath();\n    ctx.arc(centerX, centerY, 2, 0, Math.PI * 2);\n    ctx.fill();\n\n    // Display coordinates\n    ctx.fillStyle = 'black';\n    ctx.font = '12px Arial';\n    ctx.fillText(`(${centerX.toFixed(0)}, ${centerY.toFixed(0)})`, centerX + 5, centerY - 5);\n    currentFrame++;\n    if (currentFrame < frames) {\n      requestAnimationFrame(animate);\n    }\n  }\n  animate();\n}\nexport function reflectSquare(ctx, x, y, size, direction) {\n  const frames = 30;\n  let currentFrame = 0;\n  function animate() {\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    ctx.save();\n    ctx.translate(x + size / 2, y + size / 2);\n    switch (direction) {\n      case 'horizontal':\n        ctx.scale(1 - currentFrame / frames * 2, 1);\n        break;\n      case 'vertical':\n        ctx.scale(1, 1 - currentFrame / frames * 2);\n        break;\n      case 'diagonal1':\n        ctx.rotate(Math.PI / 4);\n        ctx.scale(1, 1 - currentFrame / frames * 2);\n        ctx.rotate(-Math.PI / 4);\n        break;\n      case 'diagonal2':\n        // Keep this case unchanged as it's working correctly\n        ctx.rotate(-Math.PI / 4);\n        ctx.scale(1 - currentFrame / frames * 2, 1);\n        ctx.rotate(Math.PI / 4);\n        break;\n    }\n    ctx.translate(-(x + size / 2), -(y + size / 2));\n    drawLighterSquare(ctx, x, y, size);\n    ctx.restore();\n    currentFrame++;\n    if (currentFrame <= frames) {\n      requestAnimationFrame(animate);\n    }\n  }\n  animate();\n}","map":{"version":3,"names":["drawLighterSquare","rotateDiagonals","ctx","size","angle","frames","currentFrame","canvasWidth","canvas","width","canvasHeight","height","squareX","squareY","centerX","centerY","animate","clearRect","save","translate","rotate","Math","PI","beginPath","moveTo","lineTo","strokeStyle","stroke","restore","fillStyle","arc","fill","font","fillText","toFixed","requestAnimationFrame","reflectSquare","x","y","direction","scale"],"sources":["/Users/Rebin/new symmetry /my-app/src/utils/transformUtils.ts"],"sourcesContent":["import { drawLighterSquare } from './drawingUtils';\n\nexport function rotateDiagonals(\n  ctx: CanvasRenderingContext2D, \n  size: number, \n  angle: number\n) {\n  const frames = 60;\n  let currentFrame = 0;\n\n  const canvasWidth = ctx.canvas.width;\n  const canvasHeight = ctx.canvas.height;\n  const squareX = (canvasWidth - size) / 2;\n  const squareY = (canvasHeight - size) / 2;\n  const centerX = squareX + size / 2;\n  const centerY = squareY + size / 2;\n\n  function animate() {\n    ctx.clearRect(0, 0, canvasWidth, canvasHeight);\n\n    // Draw the stationary square\n    drawLighterSquare(ctx, squareX, squareY, size);\n\n    // Draw the rotating diagonals\n    ctx.save();\n    ctx.translate(centerX, centerY);\n    ctx.rotate((currentFrame / frames) * (angle * Math.PI / 180));\n    \n    ctx.beginPath();\n    ctx.moveTo(-size / 2, -size / 2);\n    ctx.lineTo(size / 2, size / 2);\n    ctx.moveTo(size / 2, -size / 2);\n    ctx.lineTo(-size / 2, size / 2);\n    ctx.strokeStyle = 'rgba(255, 0, 0, 0.5)';\n    ctx.stroke();\n    \n    ctx.restore();\n\n    // Draw the center dot\n    ctx.fillStyle = 'red';\n    ctx.beginPath();\n    ctx.arc(centerX, centerY, 2, 0, Math.PI * 2);\n    ctx.fill();\n\n    // Display coordinates\n    ctx.fillStyle = 'black';\n    ctx.font = '12px Arial';\n    ctx.fillText(`(${centerX.toFixed(0)}, ${centerY.toFixed(0)})`, centerX + 5, centerY - 5);\n\n    currentFrame++;\n\n    if (currentFrame < frames) {\n      requestAnimationFrame(animate);\n    }\n  }\n\n  animate();\n}\n\nexport function reflectSquare(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  size: number,\n  direction: 'horizontal' | 'vertical' | 'diagonal1' | 'diagonal2'\n) {\n  const frames = 30;\n  let currentFrame = 0;\n\n  function animate() {\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n\n    ctx.save();\n    ctx.translate(x + size / 2, y + size / 2);\n    \n    switch (direction) {\n      case 'horizontal':\n        ctx.scale(1 - (currentFrame / frames) * 2, 1);\n        break;\n      case 'vertical':\n        ctx.scale(1, 1 - (currentFrame / frames) * 2);\n        break;\n      case 'diagonal1':\n        ctx.rotate(Math.PI / 4);\n        ctx.scale(1, 1 - (currentFrame / frames) * 2);\n        ctx.rotate(-Math.PI / 4);\n        break;\n      case 'diagonal2':\n        // Keep this case unchanged as it's working correctly\n        ctx.rotate(-Math.PI / 4);\n        ctx.scale(1 - (currentFrame / frames) * 2, 1);\n        ctx.rotate(Math.PI / 4);\n        break;\n    }\n    \n    ctx.translate(-(x + size / 2), -(y + size / 2));\n    drawLighterSquare(ctx, x, y, size);\n    ctx.restore();\n\n    currentFrame++;\n\n    if (currentFrame <= frames) {\n      requestAnimationFrame(animate);\n    }\n  }\n\n  animate();\n}\n"],"mappings":"AAAA,SAASA,iBAAiB,QAAQ,gBAAgB;AAElD,OAAO,SAASC,eAAeA,CAC7BC,GAA6B,EAC7BC,IAAY,EACZC,KAAa,EACb;EACA,MAAMC,MAAM,GAAG,EAAE;EACjB,IAAIC,YAAY,GAAG,CAAC;EAEpB,MAAMC,WAAW,GAAGL,GAAG,CAACM,MAAM,CAACC,KAAK;EACpC,MAAMC,YAAY,GAAGR,GAAG,CAACM,MAAM,CAACG,MAAM;EACtC,MAAMC,OAAO,GAAG,CAACL,WAAW,GAAGJ,IAAI,IAAI,CAAC;EACxC,MAAMU,OAAO,GAAG,CAACH,YAAY,GAAGP,IAAI,IAAI,CAAC;EACzC,MAAMW,OAAO,GAAGF,OAAO,GAAGT,IAAI,GAAG,CAAC;EAClC,MAAMY,OAAO,GAAGF,OAAO,GAAGV,IAAI,GAAG,CAAC;EAElC,SAASa,OAAOA,CAAA,EAAG;IACjBd,GAAG,CAACe,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEV,WAAW,EAAEG,YAAY,CAAC;;IAE9C;IACAV,iBAAiB,CAACE,GAAG,EAAEU,OAAO,EAAEC,OAAO,EAAEV,IAAI,CAAC;;IAE9C;IACAD,GAAG,CAACgB,IAAI,CAAC,CAAC;IACVhB,GAAG,CAACiB,SAAS,CAACL,OAAO,EAAEC,OAAO,CAAC;IAC/Bb,GAAG,CAACkB,MAAM,CAAEd,YAAY,GAAGD,MAAM,IAAKD,KAAK,GAAGiB,IAAI,CAACC,EAAE,GAAG,GAAG,CAAC,CAAC;IAE7DpB,GAAG,CAACqB,SAAS,CAAC,CAAC;IACfrB,GAAG,CAACsB,MAAM,CAAC,CAACrB,IAAI,GAAG,CAAC,EAAE,CAACA,IAAI,GAAG,CAAC,CAAC;IAChCD,GAAG,CAACuB,MAAM,CAACtB,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAG,CAAC,CAAC;IAC9BD,GAAG,CAACsB,MAAM,CAACrB,IAAI,GAAG,CAAC,EAAE,CAACA,IAAI,GAAG,CAAC,CAAC;IAC/BD,GAAG,CAACuB,MAAM,CAAC,CAACtB,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAG,CAAC,CAAC;IAC/BD,GAAG,CAACwB,WAAW,GAAG,sBAAsB;IACxCxB,GAAG,CAACyB,MAAM,CAAC,CAAC;IAEZzB,GAAG,CAAC0B,OAAO,CAAC,CAAC;;IAEb;IACA1B,GAAG,CAAC2B,SAAS,GAAG,KAAK;IACrB3B,GAAG,CAACqB,SAAS,CAAC,CAAC;IACfrB,GAAG,CAAC4B,GAAG,CAAChB,OAAO,EAAEC,OAAO,EAAE,CAAC,EAAE,CAAC,EAAEM,IAAI,CAACC,EAAE,GAAG,CAAC,CAAC;IAC5CpB,GAAG,CAAC6B,IAAI,CAAC,CAAC;;IAEV;IACA7B,GAAG,CAAC2B,SAAS,GAAG,OAAO;IACvB3B,GAAG,CAAC8B,IAAI,GAAG,YAAY;IACvB9B,GAAG,CAAC+B,QAAQ,CAAC,IAAInB,OAAO,CAACoB,OAAO,CAAC,CAAC,CAAC,KAAKnB,OAAO,CAACmB,OAAO,CAAC,CAAC,CAAC,GAAG,EAAEpB,OAAO,GAAG,CAAC,EAAEC,OAAO,GAAG,CAAC,CAAC;IAExFT,YAAY,EAAE;IAEd,IAAIA,YAAY,GAAGD,MAAM,EAAE;MACzB8B,qBAAqB,CAACnB,OAAO,CAAC;IAChC;EACF;EAEAA,OAAO,CAAC,CAAC;AACX;AAEA,OAAO,SAASoB,aAAaA,CAC3BlC,GAA6B,EAC7BmC,CAAS,EACTC,CAAS,EACTnC,IAAY,EACZoC,SAAgE,EAChE;EACA,MAAMlC,MAAM,GAAG,EAAE;EACjB,IAAIC,YAAY,GAAG,CAAC;EAEpB,SAASU,OAAOA,CAAA,EAAG;IACjBd,GAAG,CAACe,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEf,GAAG,CAACM,MAAM,CAACC,KAAK,EAAEP,GAAG,CAACM,MAAM,CAACG,MAAM,CAAC;IAExDT,GAAG,CAACgB,IAAI,CAAC,CAAC;IACVhB,GAAG,CAACiB,SAAS,CAACkB,CAAC,GAAGlC,IAAI,GAAG,CAAC,EAAEmC,CAAC,GAAGnC,IAAI,GAAG,CAAC,CAAC;IAEzC,QAAQoC,SAAS;MACf,KAAK,YAAY;QACfrC,GAAG,CAACsC,KAAK,CAAC,CAAC,GAAIlC,YAAY,GAAGD,MAAM,GAAI,CAAC,EAAE,CAAC,CAAC;QAC7C;MACF,KAAK,UAAU;QACbH,GAAG,CAACsC,KAAK,CAAC,CAAC,EAAE,CAAC,GAAIlC,YAAY,GAAGD,MAAM,GAAI,CAAC,CAAC;QAC7C;MACF,KAAK,WAAW;QACdH,GAAG,CAACkB,MAAM,CAACC,IAAI,CAACC,EAAE,GAAG,CAAC,CAAC;QACvBpB,GAAG,CAACsC,KAAK,CAAC,CAAC,EAAE,CAAC,GAAIlC,YAAY,GAAGD,MAAM,GAAI,CAAC,CAAC;QAC7CH,GAAG,CAACkB,MAAM,CAAC,CAACC,IAAI,CAACC,EAAE,GAAG,CAAC,CAAC;QACxB;MACF,KAAK,WAAW;QACd;QACApB,GAAG,CAACkB,MAAM,CAAC,CAACC,IAAI,CAACC,EAAE,GAAG,CAAC,CAAC;QACxBpB,GAAG,CAACsC,KAAK,CAAC,CAAC,GAAIlC,YAAY,GAAGD,MAAM,GAAI,CAAC,EAAE,CAAC,CAAC;QAC7CH,GAAG,CAACkB,MAAM,CAACC,IAAI,CAACC,EAAE,GAAG,CAAC,CAAC;QACvB;IACJ;IAEApB,GAAG,CAACiB,SAAS,CAAC,EAAEkB,CAAC,GAAGlC,IAAI,GAAG,CAAC,CAAC,EAAE,EAAEmC,CAAC,GAAGnC,IAAI,GAAG,CAAC,CAAC,CAAC;IAC/CH,iBAAiB,CAACE,GAAG,EAAEmC,CAAC,EAAEC,CAAC,EAAEnC,IAAI,CAAC;IAClCD,GAAG,CAAC0B,OAAO,CAAC,CAAC;IAEbtB,YAAY,EAAE;IAEd,IAAIA,YAAY,IAAID,MAAM,EAAE;MAC1B8B,qBAAqB,CAACnB,OAAO,CAAC;IAChC;EACF;EAEAA,OAAO,CAAC,CAAC;AACX","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}