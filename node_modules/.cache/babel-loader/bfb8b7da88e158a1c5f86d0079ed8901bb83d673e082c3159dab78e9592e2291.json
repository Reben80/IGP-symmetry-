{"ast":null,"code":"export function transformCross(ctx, size, angle, reflectVertical = false, reflectHorizontal = false, reflectDiagonal1 = false, reflectDiagonal2 = false) {\n  const frames = 60;\n  let currentFrame = 0;\n  const canvasWidth = ctx.canvas.width;\n  const canvasHeight = ctx.canvas.height;\n  const centerX = 200;\n  const centerY = 200;\n\n  // Calculate the square size based on the diagonal\n  const squareSize = Math.sqrt(2) * size;\n  function animate() {\n    ctx.clearRect(0, 0, canvasWidth, canvasHeight);\n    ctx.save();\n    ctx.translate(centerX, centerY);\n    if (reflectVertical) {\n      ctx.scale(Math.cos(currentFrame / frames * Math.PI), 1);\n    } else if (reflectHorizontal) {\n      ctx.scale(1, Math.cos(currentFrame / frames * Math.PI));\n    } else if (reflectDiagonal1) {\n      ctx.rotate(Math.PI / 4);\n      ctx.scale(1, Math.cos(currentFrame / frames * Math.PI));\n      ctx.rotate(-Math.PI / 4);\n    } else if (reflectDiagonal2) {\n      ctx.rotate(-Math.PI / 4);\n      ctx.scale(Math.cos(currentFrame / frames * Math.PI), 1);\n      ctx.rotate(Math.PI / 4);\n    } else {\n      ctx.rotate(currentFrame / frames * (angle * Math.PI / 180));\n    }\n\n    // Draw the rotating diagonals\n    ctx.beginPath();\n    ctx.moveTo(-size / 2, -size / 2);\n    ctx.lineTo(size / 2, size / 2);\n    ctx.moveTo(size / 2, -size / 2);\n    ctx.lineTo(-size / 2, size / 2);\n    ctx.strokeStyle = 'rgba(255, 0, 0, 0.5)';\n    ctx.stroke();\n\n    // Draw the first square with vertices at diagonal endpoints\n    ctx.beginPath();\n    ctx.moveTo(-size / 2, 0);\n    ctx.lineTo(0, -size / 2);\n    ctx.lineTo(size / 2, 0);\n    ctx.lineTo(0, size / 2);\n    ctx.closePath();\n    ctx.fillStyle = 'rgba(0, 150, 255, 0.3)'; // Light blue fill\n    ctx.fill();\n    ctx.strokeStyle = 'rgba(0, 0, 0, 0.5)';\n    ctx.stroke();\n\n    // Draw the second square rotated 45 degrees\n    ctx.save();\n    ctx.rotate(Math.PI / 4);\n    ctx.beginPath();\n    ctx.rect(-size / 2, -size / 2, size, size);\n    ctx.fillStyle = 'rgba(255, 150, 0, 0.3)'; // Light orange fill\n    ctx.fill();\n    ctx.strokeStyle = 'rgba(0, 0, 0, 0.5)';\n    ctx.stroke();\n    ctx.restore();\n    ctx.restore();\n\n    // Draw reflection lines\n    ctx.setLineDash([5, 5]); // Dashed lines for reflection\n\n    if (reflectVertical) {\n      ctx.beginPath();\n      ctx.moveTo(centerX, 0);\n      ctx.lineTo(centerX, canvasHeight);\n      ctx.strokeStyle = 'rgba(0, 0, 255, 0.5)';\n      ctx.stroke();\n    }\n    if (reflectHorizontal) {\n      ctx.beginPath();\n      ctx.moveTo(0, centerY);\n      ctx.lineTo(canvasWidth, centerY);\n      ctx.strokeStyle = 'rgba(0, 255, 0, 0.5)';\n      ctx.stroke();\n    }\n    if (reflectDiagonal1) {\n      ctx.beginPath();\n      ctx.moveTo(0, 0);\n      ctx.lineTo(canvasWidth, canvasHeight);\n      ctx.strokeStyle = 'rgba(255, 165, 0, 0.5)'; // Orange\n      ctx.stroke();\n    }\n    if (reflectDiagonal2) {\n      ctx.beginPath();\n      ctx.moveTo(canvasWidth, 0);\n      ctx.lineTo(0, canvasHeight);\n      ctx.strokeStyle = 'rgba(128, 0, 128, 0.5)'; // Purple\n      ctx.stroke();\n    }\n    ctx.setLineDash([]); // Reset to solid lines\n\n    // Draw the center dot\n    ctx.fillStyle = 'red';\n    ctx.beginPath();\n    ctx.arc(centerX, centerY, 2, 0, Math.PI * 2);\n    ctx.fill();\n\n    // Display coordinates\n    ctx.fillStyle = 'black';\n    ctx.font = '12px Arial';\n    ctx.fillText(`(${centerX}, ${centerY})`, centerX + 5, centerY - 5);\n    currentFrame++;\n    if (currentFrame < frames) {\n      requestAnimationFrame(animate);\n    }\n  }\n  animate();\n}","map":{"version":3,"names":["transformCross","ctx","size","angle","reflectVertical","reflectHorizontal","reflectDiagonal1","reflectDiagonal2","frames","currentFrame","canvasWidth","canvas","width","canvasHeight","height","centerX","centerY","squareSize","Math","sqrt","animate","clearRect","save","translate","scale","cos","PI","rotate","beginPath","moveTo","lineTo","strokeStyle","stroke","closePath","fillStyle","fill","rect","restore","setLineDash","arc","font","fillText","requestAnimationFrame"],"sources":["/Users/Rebin/new symmetry /my-app/src/utils/transformUtils.ts"],"sourcesContent":["import { drawLighterSquare } from './drawingUtils';\n\nexport function transformCross(\n  ctx: CanvasRenderingContext2D, \n  size: number, \n  angle: number,\n  reflectVertical: boolean = false,\n  reflectHorizontal: boolean = false,\n  reflectDiagonal1: boolean = false,\n  reflectDiagonal2: boolean = false\n) {\n  const frames = 60;\n  let currentFrame = 0;\n\n  const canvasWidth = ctx.canvas.width;\n  const canvasHeight = ctx.canvas.height;\n  const centerX = 200;\n  const centerY = 200;\n\n  // Calculate the square size based on the diagonal\n  const squareSize = Math.sqrt(2) * size;\n\n  function animate() {\n    ctx.clearRect(0, 0, canvasWidth, canvasHeight);\n\n    ctx.save();\n    ctx.translate(centerX, centerY);\n    \n    if (reflectVertical) {\n      ctx.scale(Math.cos(currentFrame / frames * Math.PI), 1);\n    } else if (reflectHorizontal) {\n      ctx.scale(1, Math.cos(currentFrame / frames * Math.PI));\n    } else if (reflectDiagonal1) {\n      ctx.rotate(Math.PI / 4);\n      ctx.scale(1, Math.cos(currentFrame / frames * Math.PI));\n      ctx.rotate(-Math.PI / 4);\n    } else if (reflectDiagonal2) {\n      ctx.rotate(-Math.PI / 4);\n      ctx.scale(Math.cos(currentFrame / frames * Math.PI), 1);\n      ctx.rotate(Math.PI / 4);\n    } else {\n      ctx.rotate((currentFrame / frames) * (angle * Math.PI / 180));\n    }\n    \n    // Draw the rotating diagonals\n    ctx.beginPath();\n    ctx.moveTo(-size / 2, -size / 2);\n    ctx.lineTo(size / 2, size / 2);\n    ctx.moveTo(size / 2, -size / 2);\n    ctx.lineTo(-size / 2, size / 2);\n    ctx.strokeStyle = 'rgba(255, 0, 0, 0.5)';\n    ctx.stroke();\n\n    // Draw the first square with vertices at diagonal endpoints\n    ctx.beginPath();\n    ctx.moveTo(-size / 2, 0);\n    ctx.lineTo(0, -size / 2);\n    ctx.lineTo(size / 2, 0);\n    ctx.lineTo(0, size / 2);\n    ctx.closePath();\n    ctx.fillStyle = 'rgba(0, 150, 255, 0.3)'; // Light blue fill\n    ctx.fill();\n    ctx.strokeStyle = 'rgba(0, 0, 0, 0.5)';\n    ctx.stroke();\n\n    // Draw the second square rotated 45 degrees\n    ctx.save();\n    ctx.rotate(Math.PI / 4);\n    ctx.beginPath();\n    ctx.rect(-size / 2, -size / 2, size, size);\n    ctx.fillStyle = 'rgba(255, 150, 0, 0.3)'; // Light orange fill\n    ctx.fill();\n    ctx.strokeStyle = 'rgba(0, 0, 0, 0.5)';\n    ctx.stroke();\n    ctx.restore();\n\n    ctx.restore();\n\n    // Draw reflection lines\n    ctx.setLineDash([5, 5]); // Dashed lines for reflection\n    \n    if (reflectVertical) {\n      ctx.beginPath();\n      ctx.moveTo(centerX, 0);\n      ctx.lineTo(centerX, canvasHeight);\n      ctx.strokeStyle = 'rgba(0, 0, 255, 0.5)';\n      ctx.stroke();\n    }\n\n    if (reflectHorizontal) {\n      ctx.beginPath();\n      ctx.moveTo(0, centerY);\n      ctx.lineTo(canvasWidth, centerY);\n      ctx.strokeStyle = 'rgba(0, 255, 0, 0.5)';\n      ctx.stroke();\n    }\n\n    if (reflectDiagonal1) {\n      ctx.beginPath();\n      ctx.moveTo(0, 0);\n      ctx.lineTo(canvasWidth, canvasHeight);\n      ctx.strokeStyle = 'rgba(255, 165, 0, 0.5)'; // Orange\n      ctx.stroke();\n    }\n\n    if (reflectDiagonal2) {\n      ctx.beginPath();\n      ctx.moveTo(canvasWidth, 0);\n      ctx.lineTo(0, canvasHeight);\n      ctx.strokeStyle = 'rgba(128, 0, 128, 0.5)'; // Purple\n      ctx.stroke();\n    }\n\n    ctx.setLineDash([]); // Reset to solid lines\n\n    // Draw the center dot\n    ctx.fillStyle = 'red';\n    ctx.beginPath();\n    ctx.arc(centerX, centerY, 2, 0, Math.PI * 2);\n    ctx.fill();\n\n    // Display coordinates\n    ctx.fillStyle = 'black';\n    ctx.font = '12px Arial';\n    ctx.fillText(`(${centerX}, ${centerY})`, centerX + 5, centerY - 5);\n\n    currentFrame++;\n\n    if (currentFrame < frames) {\n      requestAnimationFrame(animate);\n    }\n  }\n\n  animate();\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}